parameters:
  envName: ''
  
jobs:
- deployment: deployToAKS
  displayName: Deploy to namespace ${{ parameters.envName }}
  # Dot here is very important, it targets the namespace in the environments view UI
  environment: AKS-${{ parameters.envName }}.${{ parameters.envName }}

  pool:
    vmImage: ubuntu-latest

  strategy:
    runOnce:
      deploy:
        steps:
        - checkout: self

        - task: HelmInstaller@1
          displayName: 'Install Helm version'
          inputs:
            helmVersionToInstall: 2.14.0
        
        - task: HelmDeploy@0
          displayName: 'Helm update dependencies'
          inputs:
            azureSubscriptionEndpoint: $(azure-connection)
            azureResourceGroup: $(aks-resgrp)
            kubernetesCluster: $(aks-connection)
            command: dependency
            arguments: 'update kubernetes/helm/smilr'

        - task: HelmDeploy@0
          displayName: 'Helm install Smilr chart'
          inputs:
            connectionType: Kubernetes Service Connection
            kubernetesServiceConnection: $(aks-connection)
            command: upgrade
            releaseName: ${{ parameters.envName }}-$(Build.BuildId)
            chartType: FilePath
            chartPath: kubernetes/helm/smilr
            overrideValues: "registryPrefix=$(acr-name).azurecr.io/,dataApi.imageTag=$(image-tag),frontend.imageTag=$(image-tag),ingress.domainSuffix=smilr.kube.benco.io,ingress.domainSuffix=kube-benco-io-cert"

        # - task: KubernetesManifest@0
        #   displayName: Bake manifests from Helm chart
        #   name: bake
        #   inputs:
        #     action: bake
        #     kubernetesServiceConnection: $(aks-connection)
        #     releaseName: '${{ parameters.envName }}-$(Build.BuildId)'
        #     helmChart: kubernetes/helm/smilr
        #     overrides: |
        #       registryPrefix:$(acr-name).azurecr.io/
        #       dataApi.imageTag:$(image-tag)
        #       frontend.imageTag:$(image-tag)
        #       mongo.usePersistence:false
        #       domainSuffix:$(dns-suffix)

        # - task: KubernetesManifest@0
        #   displayName: Deploy manifests
        #   inputs:
        #     kubernetesServiceConnection: $(aks-connection)
        #     namespace: ${{ parameters.envName }}
        #     manifests: $(bake.manifestsBundle)
