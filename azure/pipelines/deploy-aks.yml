#
# Azure Pipelines
# - Deploy to Kubernetes (AKS) using Helm chart
# Ben C, 2019
#
name: $(Date:yyyy-MM-dd)$(Rev:.rr)
trigger: none
pr: none

# NOTE! The 'shared-variables' variable group must be pre-created and populated
# - Expected variables: acr-connection, azure-connection
variables:
  - group: shared-variables
  - name: ingress-host
    value: 'aks.benco.io'
  - name: aks-resgrp
    value: 'demo.aks'
  - name: aks-cluster
    value: 'aksnew'
  - name: image-tag
    value: 'latest'
  - name: acr-name
    value: 'bcdemo'

stages:
#
# Deploy stage 1 - AKS test namespace
#
- stage: deployToTest
  displayName: AKS Test

  jobs:
  - template: templates/aks-bake-deploy.yml
    parameters:
      envName: test

  - template: templates/run-postman-tests.yml
    parameters:
      dependsOn: deployToAKS
      apiHost: '$(ingress-host)/test-$(Build.BuildId)'
      frontHost: '$(ingress-host)/test-$(Build.BuildId)'
#
# Deploy stage 2 - AKS staging namespace
#
- stage: deployToStaging
  displayName: AKS Staging

  jobs:
  - template: templates/aks-bake-deploy.yml
    parameters:
      envName: staging

  - job: loadtestJob
    displayName: Run Load Test
    dependsOn: deployToAKS
    steps:
      - bash: |
          set-x
          k6ver="0.25.1"
          wget -q https://github.com/loadimpact/k6/releases/download/v$k6ver/k6-v$k6ver-linux64.tar.gz
          tar -xzf k6-v$k6ver-linux64.tar.gz
          ./k6-v$k6ver-linux64/k6 run -q -e API_HOST=http://$(ingress-host)/staging-$(Build.BuildId) -e FRONT_HOST=http://$(ingress-host)/staging-$(Build.BuildId) loadtest.js
        displayName: Call loadtest scripts
        workingDirectory: etc/loadtest

#
# Deploy stage 3 - AKS production namespace
#
- stage: deployToProduction
  displayName: AKS Production

  jobs:
  - template: templates/aks-bake-deploy.yml
    parameters:
      envName: prod

